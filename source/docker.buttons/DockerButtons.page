Menu="Buttons:1"
Cond="(pgrep('docker')!==false)"
Link="nav-user"
---
<script type="text/javascript">
  var DockerButtons = new Object;
  DockerButtons['Startable'] = [];
  DockerButtons['Stoppable'] = [];
  DockerButtons['Updatable'] = [];
  DockerButtons['Orphaned']  = [];
  DockerButtons['ForceAll']  = [];
  var buttonOutput  = "";

  $(function()
  {
    var target1 = $("input[value='Check for Updates']");
    var target2 = $("div[id='apps_icons'] > div[class~='Panel']:last").next();
    if (target1.length)
    {
      target = target1;
    }
    else
    {
      target    = target2;
      dashboard = true;
    }

    if (target.length)
    {
      $.get("/plugins/docker.buttons/DockerButtons.php", function(data)
      {
        DockerButtons = data;
        disable = Object.keys(DockerButtons.Startable).length ? "" : "disabled";
        buttonOutput += "<button onclick='dockerButtonStart(this);' "+disable+">Start All Containers</button>";

        disable = Object.keys(DockerButtons.Stoppable ).length ? "" : "disabled";
        buttonOutput += "<button onclick='dockerButtonStop(this);' "+disable+">Stop All Containers</button>";

        disable = Object.keys(DockerButtons.Updatable).length ? "" : "disabled";
        buttonOutput += "<button onclick='dockerButtonUpdate(this,false);' "+disable+">Install Available Updates</button>";

        disable = Object.keys(DockerButtons.Orphaned).length ? "" : "disabled";
        buttonOutput += "<button class='advanced' style='display:none;' onclick='dockerButtonUpdate(this,true);' "+disable+">Force Update All Containers</button>";
        buttonOutput += "<button class='advanced' style='display:none;' onclick='dockerButtonOrphan(this);' "+disable+">Remove Orphaned Images</button>";

        if (typeof(dashboard) !== 'undefined')
        {
          buttonOutput = "<div>"+buttonOutput+"</div>";
        }
        
        target.after(buttonOutput);
      },"json");
    }
  });

function dockerButtonsAlert(title,desc,imageUrl,imageSize, outsideClick, showCancel, showConfirm, alertType) {
    if (typeof(imageUrl)     === "undefined") imageUrl     = "/plugins/docker.buttons/images/loading.gif";
    if (typeof(outsideClick) === "undefined") outsideClick = false;
    if (typeof(showCancel)   === "undefined") showCancel   = false;
    if (typeof(showConfirm)  === "undefined") showConfirm  = false;
    if (typeof(showConfirm)  === "undefined") showConfirm  = false;
    if (typeof(imageSize)    === "undefined") imageSize    = "80x80";
    swal({
      title: title,
      text: desc,
      imageUrl: imageUrl,
      imageSize: imageSize,
      allowOutsideClick: outsideClick,
      showConfirmButton: showConfirm,
      showCancelButton: showCancel,
      type: alertType,
      html: true
    });
  }

  function dockerButtonUpdate(el,force)
  {
    $(el).attr("disabled", true);
    Updates = (force) ? DockerButtons.ForceAll : DockerButtons.Updatable;
    dockerButtonsAlert("Updating Containers","Please wait while updating Docker containers...");
    $.get("/plugins/dynamix.docker.manager/include/CreateDocker.php",{updateContainer: true, "ct[]": Updates}).always(function(){location.reload();});
  }

  function dockerButtonStart(el)
  {
    $(el).attr("disabled", true);
    dockerButtonsAlert("Starting Containers","Please wait while starting Docker containers...");
    var elnum = Object.keys( DockerButtons.Startable ).length;
    $.each(DockerButtons.Startable, function (i,v)
    {
      $.get(eventURL, {action: "start", container: v}, function(data)
      {
        elnum -= 1;
        if (! elnum)
        {
          swal.close();
          location.reload();
        }
      });
    });
  }


  function dockerButtonStop(el)
  {
    $(el).attr("disabled", true);
    var elnum = Object.keys( DockerButtons.Stoppable ).length;
    dockerButtonsAlert("Stopping Containers","Please wait while stopping Docker containers...");
    $.each(DockerButtons.Stoppable, function (i,v)
    {
      $.get(eventURL, {action: "stop", container: v}, function(data)
      {
        elnum -= 1;
        if (! elnum)
        {
          location.reload();
        }
      });
    });
  }

  function dockerButtonOrphan(el)
  {
    $(el).attr("disabled", true);
    var elnum = Object.keys( buttonOrphaned ).length;
    $.each(DockerButtons.Orphaned, function (i,v)
    {
      $.get(eventURL, {action: "remove_image", image: v}, function(data)
      {
        elnum -= 1;
        if (! elnum)
        {
          location.reload();
        }
      });
    });
  }

</script>