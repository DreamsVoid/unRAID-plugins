Menu="Main:4"
Title="USB Devices"
Cond="( count(preg_grep('/.*(usb).*?-part\d+/i', array_diff(scandir('/dev/disk/by-path'), array('.','..')))) > 1 )"
---
<?PHP
$plugin = "gfjardim.usb.automount";
require_once("/usr/local/emhttp/plugins/${plugin}/include/usb_mount_lib.php");
?>
<script type="text/javascript">
$('#usb_table').tablesorter({headers:{0:{sorter:false},5:{sorter:false}}});
$('#usb_table tr:even').addClass('odd');

function usb_mount(cmd){
  $("#cmdUsbMount").val(cmd);
  $("#formUsbMount").submit();
}

function pin_tab(n) {
  $.removeCookie('one',{path:'/'});
  $.cookie('tab','tab'+n,{path:'/'});
}

var tabnum = $('input[name$="tabs"]').length;
$('#tab'+tabnum).bind({click:function() {pin_tab(tabnum);}});
</script>

<form id="formUsbMount" method="POST" action="/update.php" target="progressFrame">
  <input type="hidden" id="cmdUsbMount" name="#command" value="" />
</form>

<table class="tablesorter shift" id="usb_table"><thead><tr><th>Device</th><th>Identification</th><th>Mount point</th><th>Type</th><th>Size</th><th>Used</th><th>Free</th><th>Open files</th><th>Control</th><th>View</th></tr></thead>
<tbody id="">
<? foreach (get_all_disks_info() as $disk) {?>
<tr>
  <td><img src='/webGui/images/<?=(is_shared($disk['label']))?"green-on.png":"red-on.png";?>'> <?=basename($disk['device']);?></td>
  <td><?=$disk['label'];?></td>
  <td><?=$disk['target'];?></td>
  <td><?=$disk['fstype'];?></td>
  <td><?=$disk['size'];?></td>
  <td><?=$disk['used'];?></td>
  <td><?=$disk['avail'];?></td>
  <td><?=strlen($disk['target']) ? shell_exec("lsof -F N ${disk[target]} 2>/dev/null| wc -l") : "0"; ?>
  <td><?=strlen($disk['target']) ? "<button onclick=\"usb_mount('/usr/local/sbin/usb_umount ${disk[device]}');\">Unmount</button>" : "<button onclick=\"usb_mount('/usr/local/sbin/usb_mount ${disk[device]}');\">Mount</button>";?></td>
  <td><?if($disk['target']){?><a href="/Main/Browse?dir=<?=$disk['target'];?>"><img src="/webGui/images/explore.png" title="Browse <?=$disk['target'];?>"><?};?></td>
</tr>
<?};?>
</tbody>
</table>
<?
$smb_extra = @file($paths['smb_extra'],FILE_IGNORE_NEW_LINES);
$smb_extra_includes = array_unique(preg_grep("/include/i", $smb_extra));
foreach($smb_extra_includes as $key => $inc) {
  if( ! is_file(parse_ini_string($inc)['include'])) unset($smb_extra_includes[$key]); 
}
$smb_clueanup = array_merge(preg_grep("/include/i", $smb_extra, PREG_GREP_INVERT), $smb_extra_includes);
$smb_clueanup = preg_replace('/\n\s*\n\s*\n/s', PHP_EOL.PHP_EOL, implode(PHP_EOL, $smb_clueanup));
?>