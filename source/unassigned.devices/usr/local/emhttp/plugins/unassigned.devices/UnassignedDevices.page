Menu="Main:4"
Title="Unassigned Devices"
Markdown="false"
---
<?PHP
$plugin = "unassigned.devices";
require_once("plugins/${plugin}/include/lib.php");
if (file_exists("plugins/dynamix/OpenDevices.page")) @rename("plugins/dynamix/OpenDevices.page","plugins/dynamix/OpenDevices.page-");
$class = new LOCAL;
$numdisks = count($class->undisks);
?>
<link rel="stylesheet" type="text/css" href="/plugins/<?=$plugin;?>/assets/glyphicons.css">

<?if (is_file("webGui/scripts/jquery.switchButton.js")): # Pre 6.1?>
<script type="text/javascript" src="/webGui/scripts/jquery.switchButton.js"></script>
<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery-ui.min.css">
<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.switchButton.css">
<?else: # Post 6.1?>
<script type="text/javascript" src="/webGui/javascript/jquery.switchbutton.js"></script>
<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.ui.css">
<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.switchbutton.css">
<?endif;?>

<link rel="stylesheet" type="text/css" href="/plugins/<?=$plugin;?>/assets/style-<?=$display['theme'];?>.css">

<script type="text/javascript">
  var this_tab = $('input[name$="tabs"]').length;
  var URL = '/plugins/<?=$plugin;?>/UnassignedDevices.php';
  $(function() {
    var content= "<div class='switch-wrapper'><input type='checkbox' class='complete-switch'></div><button type='button' onclick='$.post(\""+URL+"\",{\"action\":\"rescan_disks\"});' value='Rescan Disks'>Rescan Disks</button></div>";
  <?if (!$tabbed):?>
    $("#unassigned_tabbed").html(content);
  <?else:?>
    var last = $('input[name$="tabs"]').length;
    var elementId = "simpleComplete";
    $('.tabs').append("<span id='"+elementId+"' class='status vhshift' style='display: none;'>"+content+"&nbsp;</span>");
    if ($('#tab'+this_tab).is(':checked')) {
      $('#'+elementId).show();
    }
    $('#tab'+this_tab).bind({click:function(){$('#'+elementId).show();}});
    for (var x=1; x<=last; x++) if(x != this_tab) $('#tab'+x).bind({click:function(){$('#'+elementId).hide();}});
  <?endif;?>
    $('.complete-switch').switchButton({ labels_placement: "left", on_label: 'Complete', off_label: 'Simple', checked: $.cookie('unassigned-complete-view') != 'false'});
    $('.complete-switch').change(function () {
      $('.show-complete').toggle('slow');
      $.cookie('unassigned-complete-view', $('.complete-switch').is(':checked') ? 'true' : 'false', { expires: 3650 });
    });
  });
</script>
<style>
  table.usb_disks thead tr>td{text-align:left;width:8%;padding-left:12px;}
  table.usb_disks {padding:0px;margin:-21px 0px 22px 0px;border-collapse:collapse;white-space:nowrap;}
  table.usb_disks tr>td{text-align:left;width:8%;padding-left:12px;padding-right:0;white-space:nowrap;}
  table.usb_disks tr>td+td{width: auto;}
  table.usb_disks tr>td+td+td{width:8%}
  table.usb_disks tr>td+td+td+td{text-align:center;padding-left:0;padding-right:12px;width: 6.5%}
  table.usb_disks tr>td+td+td+td+td{text-align:right;}
  table.usb_disks tr>td+td+td+td+td+td+td+td{padding-right:0px;border-left:18px;}
  table.usb_disks tr>td+td+td+td+td+td+td+td+td+td{text-align:right;padding-right:12px;border-left:0px;}
  table.usb_disks tr>td+td+td+td+td+td+td+td+td+td+td+td{text-align:right;padding-left:0px;padding-right:10px;width:4%}

  table.usb_absent thead tr>td{text-align:left;width:8%;padding-left:12px;}
  table.usb_absent tr>td{text-align:left;width:8%;padding-left:12px;padding-right:0;white-space:nowrap;}
  table.usb_absent tr>td+td{text-align:left;width:auto;}
  table.usb_absent tr>td+td+td+td{text-align:right;padding-left:0;padding-right:12px;width: 5em;}

  table.samba_mounts thead tr>td{text-align:left;width:8%;padding-left:12px;}
  table.samba_mounts tr>td{text-align:left;width:8%;padding-left:12px;padding-right:0;white-space:nowrap;}
  table.samba_mounts tr>td+td{text-align:left;width:auto;}
  table.samba_mounts tr>td+td+td+td+td+td+td+td{text-align:left;padding:0px 0px 0px 12px;width: 75px;}
  table.samba_mounts tr>td+td+td+td+td+td+td+td+td{text-align:right;padding-left:0;padding-right:12px;}


  button[type=button].mount {margin:0px 14px 0 14px;}
  img.icon {height: 16px}
  i.glyphicon{margin:0px 5px 0 5px;}
  i.hdd{margin:0px; 0px;font-size: 1.1em}
  i.partition{margin-left: 18px;}
  .exec{cursor: pointer;}
  i.glyphicon-append{margin:0px;font-size: 0.8em;position: relative; left:-0.3em;top:0.7em;}
  .underline{text-decoration: underline;}
  button.array {padding:2px 7px 2px 7px;margin:0;}

  .switch-wrapper {
    display: inline-block;
    position: relative;
    top: 3px;
    vertical-align: middle;
  }
</style>
<script type="text/javascript">
  var display = <?=json_encode($display);?>;
  var vars = <?=json_encode($var);?>;
  var tab_usbdisks = $('input[name$="tabs"]').length;
  var reload_interval = 2000;
  var spinner = "<tr><td colspan='12' style='text-align:center;font-weight:bold;'><center><i class='fa fa-spinner fa-spin'></i>&nbsp;<em>Please wait... retrieving information!</em></center></td></tr>";
  $('#tab'+tab_usbdisks).bind({click:function() {pin_tab(tab_usbdisks); detect_usb_disk_change(tab_usbdisks);}});
  $(function(){usb_disks(tab_usbdisks);detect_usb_disk_change(tab_usbdisks);});

  if (!String.prototype.format) {
    String.prototype.format = function() {
      var args = arguments;
      return this.replace(/{(\d+)}/g, function(match, number) {
        return typeof args[number] != 'undefined' ? args[number] : match;
      });
    };
  }

  function openWindow_fsck(cmd,title,height,width) {
    var run = cmd;
    var top = (screen.height-height)/2;
    var left = (screen.width-width)/2;
    var options = 'resizeable=yes,scrollbars=yes,height='+height+',width='+width+',top='+top+',left='+left;
    window.open(run, 'log', options);
  }
  function get_preclear() {
    $.post(URL,{action:"get_preclear_status"},function(data){
      $.each(data, function(index, value) {
        $("#preclear_status_"+index).html(value);
      }); 
    },"json");
  }
  function disk_op(el, op, device){
    // add spinning and disable button
    $(el).html("<i class='fa fa-circle-o-notch fa-spin'></i> "+(op == "mount" ? "Mounting" : "Unmounting"));
    $(el).prop("disabled","true");
    // disable partition buttons
    td = $(el).closest('td');
    tr = td.closest('tr');
    part = tr.is('.toggle-parts');
    disk = tr.find('span[hdd]').attr("hdd");
    if (disk) {
      tr.siblings('tr.toggle-'+disk).find('.mount').html(td.html());
    } else if (part) {
      tr.prev('tr.toggle-disk').find('.mount').html(td.html());
    }
    $.post(URL,{'action':op,'device':device});
    // setTimeout('$("#usb_devices_list").waitMe("hide")',15000);
  }
  function pin_tab(n) {
    $.removeCookie('one',{path:'/'});
    $.cookie('tab','tab'+n,{path:'/'});
  }
  function usb_disks(tabnum) {
    $.post(URL,{action:"get_content",display:display},function(data) {
      $('#disk-table-body').html(data.disks);
      $('#remotes-table-body').html(data.remotes);
      $('#misc-div-body').html(data.misc);
    },"json").always(function() {
      $(".automount").each(toggleFunctions.prepare_automount);
      $(".toggle_share").each(toggleFunctions.prepare_toggle_share);
      $(".toggle-hdd").click(toggleFunctions.toggle_hdd);
      $(".text").click(showInput);$(".input").blur(hideInput);
      $(".show-complete").css("display", $(".complete-switch").is(":checked") ? "block" : "none");
      $("button[role=mount]").add("button[role=umount]").click(function(){disk_op(this, $(this).attr("role"), $(this).attr("device"));});
      $("button[role=format]").click(function(){format_disk(this, $(this).attr("context"), $(this).attr("device"));});
    });
  }
  function detect_usb_disk_change(tabnum) {
    if ($('#tab'+tabnum).is(':checked')) {
      clearTimeout(timers.usbdisks);
      get_preclear();
      $.post(URL,{action:"detect"},function(data){if(data.reload){
        usb_disks(tabnum);
        $.post(URL,{action:"remove_hook"});}},"json").always(
        function(){
          timers.usbdisks=setTimeout('detect_usb_disk_change('+tabnum+')',reload_interval);
        });
    } else {
      clearTimeout(timers.usbdisks);
    }
    return false;
  }
  function remove_config(el, context) {
    var info = JSON.parse($(el).parents("tr").attr("info"));
    line = "<dl><dt>{0}</dt><dd style='margin-bottom:0px;'><span style='color:#EF3D47;font-weight:bold;'>{1}</span></dd></dl>";
    if (typeof info.protocol == "undefined") {
      title = "Remove disk:";
      content = line.format("Disk Serial:", info.serial);
    } else {
      title = "Remove "+info.protocol+" share:";
      content = line.format("Server:", info.ip);
      content += line.format("Share:", info.share);
    }
    $( "#dialog-confirm" ).html(content);
    $( "#dialog-confirm" ).append( line.format("<p><span style='color: #EF3D47;'>Are you sure?</span></p>","") );
    $( "#dialog-confirm" ).dialog({
      title: title,
      resizable: false,
      width: 500,
      modal: true,
      show : {effect: 'fade' , duration: 250},
      hide : {effect: 'fade' , duration: 250},
      buttons: {
        "Yes": function() {
          $( this ).dialog( "close" );
          $('#remotes-table-body').html(spinner);
          $.post(URL,{"action":"remove_config","device":info.serial,"context":context},"json");
          usb_disks(tab_usbdisks);
        },
        Cancel: function() {
          $( this ).dialog( "close" );
          $( this ).html("");
        }
      }
    });
  }
  function showInput(){
    $(this).off('click');
    $(this).siblings('input').each(function(){$(this).show();});
    $(this).siblings('input').focus();
    $(this).hide();
  }
  function hideInput(){
    $(this).hide();
    $(this).siblings('span').show();
    $(this).siblings('span').click(showInput);
  }
  function openPreclear(device) {
    var width=900;
    var height=600;
    var top = (screen.height-height)/2;
    var left = (screen.width-width)/2;
    var options = 'resizeable=yes,scrollbars=yes,height=600,width=900,top='+top+',left='+left;
    window.open('/plugins/preclear.disk/Preclear.php?action=show_preclear&device='+device, 'Preclear', options);
  }
  function add_remote_share(){
    var title = 'Add Remote Share';
    $( "#dialog-confirm" ).html($("#add-remote-defaults").html());
    $( "#dialog-confirm" ).find(".switch").switchButton({labels_placement:"right",on_label:'YES',off_label:'NO'});
    $( "#dialog-confirm" ).find(".switch-button-background").css("margin-top", "6px");
    $( "#dialog-confirm" ).dialog({
      title: title,
      resizable: false,
      width: 600,
      modal: true,
      show : {effect: 'fade' , duration: 250},
      hide : {effect: 'fade' , duration: 250},
      buttons: {
        "Add": function() {
          $( this ).dialog( "close" );
          var opts = new Object();
          opts["action"]   = "add_remote_share";
          opts["PROTOCOL"] = getVal(this,"PROTOCOL");
          opts["IP"]       = getVal(this,"IP");
          opts["USER"]     = getVal(this,"USER");
          opts["PASS"]     = getVal(this,"PASS");
          opts["SHARE"]    = getVal(this,"SHARE");
          $('#remotes-table-body').html(spinner);
          if (opts.SHARE && opts.IP) {
            $.post(URL,opts).done(function(){usb_disks(tab_usbdisks);});
          }
        },
        Cancel: function() {
          $( this ).dialog( "close" );
        }
      }
    });
  }
  function load_hosts(el, action) {
    var target = $(el).parents("div").find("*[name='IP']");
    var old = $(el).html();
    $(el).html("<i class='fa fa-circle-o-notch fa-spin'></i> Searching ...");
    $.post(URL,{'action':action,'var':vars}).done(function(data){
      $(el).html(old);
      if (data) {
        var hosts = data.split('\n');
        if (hosts.length) {
          var add = "<select name='IP'>";
          for(var i = 0;i < hosts.length;i++){
            if (hosts[i].length) {
              add += "<option value='"+hosts[i]+"'>"+hosts[i]+"</option>";
            }
          }
          target.replaceWith(add+"</select>")
        }
      }
    });
  }
  function load_shares(el, action) {
    var old = $(el).html();
    var target = $(el).parents("div").find("*[name='SHARE']");
    $(el).html("<i class='fa fa-circle-o-notch fa-spin'></i> Loading ...");
    var opts = new Object();
    opts["action"] = action;
    opts["IP"] = getVal("#dialog-confirm","IP");
    opts["USER"] = getVal("#dialog-confirm","USER");
    opts["PASS"] = getVal("#dialog-confirm","PASS");
    if (! opts.IP.length) return false;
    $.post(URL,opts).done(function(data){
      $(el).html(old);
      if (data) {
        var shares = data.split('\n');
        if (shares.length) {
          var add = "<select name='SHARE'>";
          for(var i = 0;i < shares.length;i++){
            if (shares[i].length) {
              add += "<option value='"+shares[i]+"'>"+shares[i]+"</option>";
            }
          }
          target.replaceWith(add+"</select>")
        }
      }
    });
  }
  function getVal(el, name) {
    el = $(el).find("*[name="+name+"]");
    if (! el.length) return null;
    return value = ( $(el).attr('type') == 'checkbox' ) ? ($(el).is(':checked') ? "on" : "off") : $(el).val();
  }
  function format_disk(bt, type, device){
    var title = 'Formatting '+type+': '+device;
    $( "#dialog-confirm" ).html($("#format-disk-defaults").html());
    $( "#dialog-confirm" ).dialog({
      title: title,
      resizable: false,
      width: 600,
      modal: true,
      show : {effect: 'fade' , duration: 250},
      hide : {effect: 'fade' , duration: 250},
      buttons: {
        "Format": function() {
          if (getVal(this,"CONFIRM") != "Yes") {return false;}
          var bc = $(bt).html();
          $(bt).prop('disabled',true);
          $(bt).html("<i class='fa fa-circle-o-notch fa-spin'></i> Formatting ...");
          $( this ).dialog( "close" );
          fs = getVal(this,"FS");
          $.post(URL,{action:"format_"+type,device:device,fs:fs},"json").always(function(data){$(bt).html( data.result ? "Formated" : "Format failed..." ) });
        },
        Cancel: function() {
          $( this ).dialog( "close" );
          $( this ).html("");
        }
      }
    });
  }
  function rm_partition(bt, device, partition){
    var title = 'Remove partition '+partition+' from disk '+device;
    $( "#dialog-confirm" ).html($("#rm-partition-defaults").html());
    $( "#dialog-confirm" ).dialog({
      title: title,
      resizable: false,
      width: 600,
      modal: true,
      show : {effect: 'fade' , duration: 250},
      hide : {effect: 'fade' , duration: 250},
      buttons: {
        "Remove": function() {
          if (getVal(this,"CONFIRM") != "Yes") {return false;}
          var bc = $(bt).html();
          $(bt).prop('disabled',true);
          $(bt).html("<i class='fa fa-circle-o-notch fa-spin'></i> Removing ...");
          $( this ).dialog( "close" );
          fs = getVal(this,"FS");
          $.post(URL,{action:"rm_partition",device:device,partition:partition},"json").always(function(){usb_disks(tab_usbdisks);});
        },
        Cancel: function() {
          $( this ).dialog( "close" );
          $( this ).html("");
        }
      }
    });
  }
  function sendLog() {
    $.post(URL,{'action':'send_log'}).always(function(){notifier();});
  }
  var toggleFunctions = {
    prepare_automount : function() {
      checked = $(this).is(":checked");
      $(this).switchButton({labels_placement: "right", checked:checked});
      $(this).change(toggleFunctions.automount);
    },
    automount: function() {
      serial  = $(this).attr("serial");
      status  = $(this).is(":checked");
      context = $(this).attr("context");
      $.post(URL,{"action":"automount","serial":serial,"status":status,"context":context},function(data){$(this).prop("checked",data.automount);},"json");
    },
    prepare_toggle_share : function() {
      checked = $(this).is(":checked");
      $(this).switchButton({labels_placement: "right", checked:checked});
      $(this).change(toggleFunctions.toggle_share);
    },
    toggle_share: function() {
      var sid = $(this).attr('sid');
      $.post(URL,{action:"toggle_share",info:$(this).attr("info"),status:$(this).is(":checked")},function(data){
        $('*[sid="'+sid+'"]').each(function(){
          $(this).switchButton({checked:data.result});
        });
      },"json");
    }, 
    toggle_hdd: function(e) {
      el = $(this);
      el.disableSelection();
      disk = el.attr("hdd");
      $(".toggle-"+disk).slideToggle(0,function(){
        toggle = el.find(".glyphicon-append");
        if ( $("tr.toggle-"+disk+":first").is(":visible") ){
          toggle.addClass("glyphicon-minus-sign").removeClass("glyphicon-plus-sign");
        } else {
          toggle.removeClass("glyphicon-minus-sign").addClass("glyphicon-plus-sign");
        }
      });
    }
  };
  function rm_preclear(dev) {
    $.post(URL,{action:"rm_preclear",device:dev}).always(function(){usb_disks(tab_usbdisks)});
  }
  function load_remote_opts(el) {
    p = $(el).parents("div").find(".options");
    if ($(el).val() == "SMB") {
      p.html($("#add-samba-defaults").html());
    } else {
      p.html($("#add-nfs-defaults").html());
    }
  }
</script>
<div style='display: inline; float: right; margin: -58px -14px;' id='unassigned_tabbed'></div>
<div class="font_preload" style="opacity: 0"><span style="font-family: 'FontAwesome', Arial, sans-serif;"></span></div>
<form id="formUsbMount" method="POST" action="/update.php" target="progressFrame">
  <input type="hidden" id="cmdUsbMount" name="#command" value="" />
</form>
<div id="dialog-confirm" style="display:none;" title="Dialog Title"></div>

<div id="add-remote-defaults" style="display:none;">
  <dl>
    <dt>Protocol:</dt>
    <dd>
      <select name="PROTOCOL" onchange="load_remote_opts(this);">
        <option>Choose</option>
        <option value="SMB">SMB</option>
        <option value="NFS">NFS</option>
      </select>
    </dd>
  </dl>
  <div class="options"></div>
</div>

<div id="add-nfs-defaults" style="display:none;">
  <dl>
    <dt>IP/Host:</dt>
    <dd><span class="samba_hosts"><input type="text" name="IP"></span></dd>
    <dt>&nbsp;</dt>
    <dd><button type="button" onclick="load_hosts(this, 'list_nfs_hosts');">Search for local NFS servers</button></dd>
    <dt>Share:</dt>
    <dd><span class="samba_shares"><input type='text' name='SHARE'></span></dd>
    <dt>&nbsp;</dt>
    <dd><button type="button" onclick="load_shares(this, 'list_nfs_shares');">Load Shares</button></dd>
  </dl>
</div>

<div id="add-samba-defaults" style="display:none;">
  <dl>
    <dt>IP/Host:</dt>
    <dd><input type="text" name="IP"></dd>
    <dt>&nbsp;</dt>
    <dd><button type="button" onclick="load_hosts(this, 'list_samba_hosts');">Search for servers in <?=$var['WORKGROUP'];?></button></dd>
    <dt>Username:</dt>
    <dd><input type="text" name="USER"></dd>
    <dt>Password:</dt>
    <dd><input type="password" name="PASS"></dd>
    <dt>Share:</dt>
    <dd><input type='text' name='SHARE'></dd>
    <dt>&nbsp;</dt>
    <dd><button type="button" onclick="load_shares(this, 'list_samba_shares');">Load Shares</button></dd>
  </dl>  
</div>

<div id="format-disk-defaults" style="display:none;">
  <dl>
    <dt>Filesystem:</dt>
    <dd>
      <select name="FS">
        <option value="xfs">XFS</option>
        <option value="btrfs">BTRFS</option>
        <option value="ntfs">NTFS</option>
        <option value="ext4">EXT4</option>
        <option value="exfat">exFAT</option>
        <option value="fat32">FAT32</option>
      </select>
    </dd>
    <dt>Type<span class="red">Yes</span>to confirm:</dt>
    <dd><input type="text" name="CONFIRM" style="width: 60px"></dd>
  </dl>
</div>

<div id="rm-partition-defaults" style="display:none;">
  <dl>
    <dt>Type<span class="red">Yes</span>to confirm:</dt>
    <dd><input type="text" name="CONFIRM" style="width: 60px"></dd>
  </dl>
</div>

<table class='usb_disks custom_head'>
  <thead>
    <tr>
      <td>Device</td>
      <td>Identification</td>
      <td></td>
      <td>Temp.</td>
      <td>FS</td>
      <td>Size</td>
      <td>Open files</td>
      <td>Auto mount</td>
      <td>Share</td>
      <td>Used</td>
      <td>Free</td>
      <td>Script</td>
    </tr>
  </thead>
  <tbody id="disk-table-body">
    <tr><td colspan='12' style='text-align:center;font-weight:bold;'>
      <center><i class='fa fa-spinner fa-spin'></i>&nbsp;<em>Please wait... retrieving information!</em></center>
    </td></tr>
    <?for ($i=0; $i < $numdisks; $i++) {$odd = ($odd == "even") ? "odd" : "even"; echo "<tr class='$odd'><td colspan='12'>&nbsp;</td></tr>";}?>
  </tbody>
</table>

<div id='smb_tab' class='show-complete'>
  <div id='title'><span class='left'><img src='/plugins/<?=$plugin;?>/icons/remoteshare.png' class='icon'>Remote Shares</span></div>
  <table class='samba_mounts custom_head'>
    <thead>
      <tr>
        <td>Device</td>
        <td>Source</td>
        <td>Mount point</td>
        <td></td>
        <td>Size</td>
        <td>Used</td>
        <td>Free</td>
        <td>Auto mount</td>
        <td>Script</td>
        <td>Remove</td>
      </tr>
    </thead>
    <tbody id="remotes-table-body">
      <tr><td colspan='12' style='text-align:center;font-weight:bold;'>
        <center><i class='fa fa-spinner fa-spin'></i>&nbsp;<em>Please wait... retrieving information!</em></center>
      </td></tr>
    </tbody>
  </table>
  <button type='button' onclick='add_remote_share();'>Add Remote Share</button>
  <div id="misc-div-body"></div>
</div>
<script type="text/javascript">
  $(".show-complete").css("display", ($.cookie('unassigned-complete-view') == 'yes') ? "block" : "none");
</script>

<blockquote class='inline_help'>
  <p>Click <a class="exec underline" onclick="openWindow('/webGui/scripts/tail_log&arg1=unassigned.devices.log','Log Information',600,900);">here</a> to see the log. Alternatively, you can upload a copy of the log by clicking <a class="underline exec" onclick="sendLog();">here</a>.
  </p>
</blockquote>
<?set_error_handler($ori_error_handler);?>
