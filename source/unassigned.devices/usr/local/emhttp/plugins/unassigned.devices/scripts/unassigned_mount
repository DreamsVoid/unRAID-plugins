#!/usr/bin/php
<?
$plugin = "unassigned.devices";
require_once("/usr/local/emhttp/plugins/{$plugin}/include/lib.php");

$DEVNAME = (isset($_ENV['DEVNAME'])) ? $_ENV['DEVNAME'] : ( isset($argv[1]) ? $argv[1] : NULL );
$DEVNAME = (file_exists($DEVNAME)) ? realpath($DEVNAME) : $DEVNAME;
if (! $DEVNAME) die("Fail: disk device not informed.\n");

# Mount remote shares
if (! file_exists($DEVNAME) || $DEVNAME == "all") {
  $mounts = get_remote_shares();
  foreach ($mounts as $info) {
    $device = $info['device'];
    if ( preg_match("#".$DEVNAME."$#i", $device) || $DEVNAME == "all" ) {
      if (! $info['automount'] && $DEVNAME == "all" ) {
        debug("SMB mount '{$info['device']}' auto mount is disabled, aborting.");
        continue;
      }
      debug("{$info['protocol']} share found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))));
      debug("Mounting {$info['protocol']} share '$device' ...");
      @touch(sprintf($paths['unmounting'],basename($info['device'])));
      if (do_mount( $info )) {
        execute_script($info, "ADD");
      }
      @unlink(sprintf($paths['unmounting'],basename($info['device'])));
    }
  }
}

# Mount local disks
$local = new LOCAL;
foreach($local->undisks as $id => $disk) {
  foreach ($disk['partitions'] as $partition) {
    if ( preg_match("#".$DEVNAME."#i", realpath($partition)) || $DEVNAME == "all" ) {
      debug("");debug("Mounting '{$DEVNAME}'");
      $disk = array_merge($disk, $local->get_disk_info($id));
      $info = $local->get_partition_info($partition,$disk);
      if ($info['mounted']) {
        debug("Partition '{$info['device']}' is already mounted.");
        continue;
      }
      if (! $disk['automount'] && ( $DEVNAME == "all" || isset($_ENV['DEVNAME']) )) {
        debug("Disk with serial '{$disk[serial]}' auto mount is disabled, aborting.");
        continue;
      }
      debug("Drive found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))));
      debug("Adding disk $drive ...");
      @touch(sprintf($paths['mounting'],basename($info['device'])));
      if (do_mount( $info )) {
        debug("Partition '{$info['device']}' successfully mounted.");
        if (config_shared( $disk['serial'],  $info['part'])) {
          add_smb_share($info['mountpoint'], $info['label']);
          if ($local->get_config("Config", "nfs_export") == "yes") {
            if (is_bool(strpos("ntfs vfat exfat", $info['fstype']))) {
              add_nfs_share($info['mountpoint']);
            }
          }
        } else {
          debug("Partition '{$info['label']}' marked as not sharable, skipping.");
        }
        execute_script($info, "ADD");
        setSleepTime($disk['device']);
      } else {
        debug("Partition '{$info['device']}' mount failed.");
      }
      @unlink(sprintf($paths['mounting'],basename($info['device'])));
    }
  }
}

touch($paths['reload']);
?>
