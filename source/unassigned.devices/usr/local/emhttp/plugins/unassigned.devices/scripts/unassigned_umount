#!/usr/bin/php
<?
$plugin = "unassigned.devices";
require_once("/usr/local/emhttp/plugins/${plugin}/include/lib.php");
$PRESENT=array();

$DEVNAME = (isset($_ENV['DEVNAME'])) ? $_ENV['DEVNAME'] : ( isset($argv[1]) ? $argv[1] : NULL );
$DEVNAME = (file_exists($DEVNAME)) ? realpath($DEVNAME) : $DEVNAME;
if (! $DEVNAME) die("Fail: disk device not informed.\n");

# Deal with remote shares
if (! file_exists($DEVNAME)|| $DEVNAME == "all") {
  $mounts = get_remote_shares();
  foreach ($mounts as $info) {
    $device = $info['device'];
    if ( preg_match("#".$DEVNAME."$#i", $device) || $DEVNAME == "all" ) {
      if (! $info['automount'] && $DEVNAME == "all" ) {
        debug("Disk with serial '{$info['serial']}' auto mount is disabled, aborting.");
        continue;
      }
      debug("{$info[protocol]} share found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))));
      if ( is_mounted($info['device']) ) {
        @touch(sprintf($paths['unmounting'],basename($info['device'])));
        execute_script($info, "REMOVE");
        debug("Unmounting {$info['protocol']} share '${info[device]}' ...");
        if ( do_unmount($info['device'], $info['mountpoint'], true) ) {
          debug("Share '{$info['device']}' unmount successfull.");
          @unlink(sprintf($paths['unmounting'],basename($info['device'])));
        }
      } else {
        debug("{$info['protocol']} share '{$info['device']}' not mounted, aborting...");
      }
    }
  }
}

$local = new LOCAL;
foreach($local->undisks as $id => $disk) {
  foreach ($disk['partitions'] as $partition) {
    if ( preg_match("#".$DEVNAME."#i", realpath($partition)) || $DEVNAME == "all" ) {
      $disk = array_merge($disk, $local->get_disk_info($id));
      $info = $local->get_partition_info($partition, $disk);
      if (! strlen($info['mounted'])) {
        debug("Partition '{$info['device']}' is not mounted.");
        continue;
      }
      if (! $disk['automount'] && ( $DEVNAME == "all" || isset($_ENV['DEVNAME']) )) {
        debug("Disk with serial '{$disk['serial']}' auto mount is disabled, aborting.");
        continue;
      }
      debug("Drive found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))));
      @touch(sprintf($paths['unmounting'],basename($info['device'])));
      debug("Removing disk '{$info['label']}'' shares ...");
      execute_script($info, "REMOVE");
      if ( rm_smb_share($info['mountpoint'], $info['label']) && rm_nfs_share($info['mountpoint']) ) {
        debug("Unmounting disk {$info['label']} ..");
        if ( do_unmount($info['device'], $info['mountpoint'], true) ) {
          debug("Disk {$info['label']} removed successfully.");
        }
      }
      @unlink(sprintf($paths['unmounting'],basename($info['device'])));
    }
  }
}
touch($paths['reload']);
?>